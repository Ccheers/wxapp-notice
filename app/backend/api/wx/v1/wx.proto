syntax = "proto3";

import "google/api/annotations.proto";
import "validate/validate.proto";
package api.wx.v1;

option go_package = "github.com/Ccheers/wxapp-notice/app/backend/api/wx/v1;v1";
option java_multiple_files = true;
option java_package = "api.wx.v1";

service Wx {
  rpc Code2Session (Code2SessionRequest) returns (Code2SessionReply) {
    option (google.api.http) = {
      get: "/sns/jscode2session"
    };
  };
  rpc SubscribeSend (SubscribeSendRequest) returns (SubscribeSendReply) {
    option (google.api.http) = {
      get: "/cgi-bin/message/subscribe/send"
    };
  };
  rpc GetAccessToken (GetAccessTokenRequest) returns (GetAccessTokenReply) {
    option (google.api.http) = {
      get: "/cgi-bin/token"
    };
  };
}

//    属性	类型	默认值	必填	说明
//    appid	string		是	小程序 appId
//    secret	string		是	小程序 appSecret
//    js_code	string		是	登录时获取的 code
//    grant_type	string		是	授权类型，此处只需填写 authorization_code
message Code2SessionRequest {
  string appid = 1;
  string secret = 2;
  string js_code = 3 [(validate.rules).string = {min_len:1}];
  string grant_type = 4;
}

//    属性	类型	说明
//    openid	string	用户唯一标识
//    session_key	string	会话密钥
//    unionid	string	用户在开放平台的唯一标识符，若当前小程序已绑定到微信开放平台帐号下会返回，详见 UnionID 机制说明。
//    errcode	number	错误码
//    errmsg	string	错误信息
message Code2SessionReply {
  string openid = 1;
  string session_key = 2;
  string unionid = 3;
  int64 errcode = 4;
  string errmsg = 5;
}

message SubscribeSendRequest {
  string access_token = 1 [(validate.rules).string = {min_len:1}];
  string touser = 2 [(validate.rules).string = {min_len:1}];
  string template_id = 3 [(validate.rules).string = {min_len:1}];
  map<string, TmplData> data = 4 [(validate.rules).string = {min_len:1}];
}
message TmplData {
  string value = 1 [(validate.rules).string = {min_len:1}];
}

message SubscribeSendReply {
  int64 errcode = 1;
  string errmsg = 2;
}
message GetAccessTokenRequest {
  string grant_type = 1 [(validate.rules).string = {min_len:1}];
  string appid = 2 [(validate.rules).string = {min_len:1}];
  string secret = 3 [(validate.rules).string = {min_len:1}];
}
message GetAccessTokenReply {
  string access_token = 1 [(validate.rules).string = {min_len:1}];
  int64 expires_in = 2;
  int64 errcode = 3;
  string errmsg = 4;
}